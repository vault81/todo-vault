//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.0

use sea_orm::{entity::prelude::*, ActiveValue::NotSet, Set, Unset};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "todos")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id:    String,
    pub title: String,
    pub text:  String,
    pub done:  bool,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}

impl ActiveModel {
    pub fn new(title: String, text: Option<String>) -> Self {
        Self {
            title: Set(title),
            text: text.map(Set).unwrap_or(NotSet),
            ..Default::default()
        }
    }
}
